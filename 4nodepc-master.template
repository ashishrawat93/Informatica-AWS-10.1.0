{
  "AWSTemplateFormatVersion" : "2010-09-09",
  "Description" : "This template creates a VPC infrastructure for a single-AZ, multi-tier deployment of PowerCenter in a DMZ tier with an Oracle database on a private database tier within the VPC.  It uses nested templates.",
  "Parameters" : {
    "KeyName" : {
      "Description" : "Name of an existing EC2 key pair to enable SSH or RDS access to the instance.",
      "Type" : "String"
    },
    "DatabaseUsername" : {
      "Description" : "Username for the database account in Amazon RDS.",
      "Type" : "String",
      "MinLength" : "2",
      "MaxLength" : "30"
    },
    "DatabasePassword" : {
      "Description" : "Password for the database account in Amazon RDS.",
      "Type" : "String",
      "MinLength" : "8",
      "MaxLength" : "30",
      "NoEcho" : "true"
    },
    "InformaticaDomainPassword" : {
      "Description" : "Password for the Informatica domain.",
      "Type" : "String",
      "MinLength" : "8",
      "MaxLength" : "32",
      "NoEcho" : "true"
    },
	"EncryptionKeyPhrase" : {
	  "Description" : "The text string used as the base word from which to generate an encryption key for the Informatica domain.", 
      "Type" : "String",
      "MinLength" : "8",
      "MaxLength" : "32",
      "NoEcho" : "true",
      "AllowedPattern" : "^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=\\S+$).{8,}$",
      "ConstraintDescription" : "It should be 8 to 20 characters long, at least one uppercase letter at least one lowercase letter-at least one number Does not contain spaces"
    },
    "DatabaseType" : {
      "Description" : "The type of database to use in Amazon RDS. Currently, you can only use Oracle.",
      "Type" : "String",
      "Default" : "Oracle",
      "AllowedValues" : [ "Oracle" ],
      "ConstraintDescription" : "Oracle"
    },
    "AZ1" : {
      "Description" : "Name of the availability zone that contains the public and private subnets. Enter a valid zone for the region.",
      "Type" : "String",
      "Default" : "ap-southeast-1a",
      "AllowedValues" : [ "eu-west-1a", "eu-west-1b", "eu-west-1c", "us-east-1a", "us-east-1b", "us-east-1c", "us-east-1d", "ap-southeast-1a", "ap-southeast-1b", "ap-southeast-2a", "ap-southeast-2b", "ap-northeast-1a", "ap-northeast-1b", "ap-northeast-1c", "us-west-2a", "us-west-2b", "us-west-2c" ],
      "ConstraintDescription" : "Must be a valid EC2 Availabilty zone for region being deployed to. Only supports eu-west-1 ,us-east-1 & us-west-1 etc <- You can customize if you define a constraint"
    },
    "AZ2" : {
      "Description" : "Name of the backup availability zone. Enter an availability zone in the same region as AZ1.",
      "Type" : "String",
      "Default" : "ap-southeast-1b",
      "AllowedValues" : [ "eu-west-1a", "eu-west-1b", "eu-west-1c", "us-east-1a", "us-east-1b", "us-east-1c", "us-east-1d", "ap-southeast-1a", "ap-southeast-1b", "ap-southeast-2a", "ap-southeast-2b", "ap-northeast-1a", "ap-northeast-1b", "ap-northeast-1c", "us-west-2a", "us-west-2b", "us-west-2c" ],
      "ConstraintDescription" : "Must be a valid EC2 Availabilty zone for region being deployed to. Only supports eu-west-1 ,us-east-1 & us-west-1 etc <- You can customize if you define a constraint"
    },
    "PlacementGroupName" : {
      "Description" : "Name of an existing placement group to which you want to add the instance.",
      "Type" : "String",
      "MinLength" : "1",
      "MaxLength" : "32",
      "Default" : "unassigned"
    }
  },
  "Mappings" : {
    "Config" : {
      "Settings" : {
        "RDPNetwork" : "0.0.0.0/0",
        "InstanceType" : "c3.2xlarge",
        "InformaticaDomainName" : "InfaDefaultDomain",
        "DatabaseName" : "pc",
        "Node1Name" : "PowercenterNode1",
        "Node2Name" : "PowercenterNode2",
        "Node3Name" : "PowercenterNode3",
        "Node4Name" : "PowercenterNode4",
        "Node2ServesAsGateway" : 1,
        "Node3ServesAsGateway" : 1,
        "Node4ServesAsGateway" : 1,
        "DatabaseSize" : "db.m3.large",
        "MultiAZ" : false
      },
      "Oracle" : {
        "Engine" : "oracle-ee",
        "LicenseModel" : "bring-your-own-license",
        "AllocatedStorage" : "50",
        "Port" : 1521
      },
      "MSSQL" : {
        "Engine" : "sqlserver-se",
        "LicenseModel" : "bring-your-own-license",
        "AllocatedStorage" : "200",
        "Port" : 1433
      }
    }
  },
  "Resources" : {
    "NetworkStack" : {
      "Type" : "AWS::CloudFormation::Stack",
      "Properties" : {
        "TemplateURL" : "https://s3-ap-southeast-1.amazonaws.com/infatemplatesqa/pc-network-stack.template",
        "Parameters" : {
          "AZ1" : {
            "Ref" : "AZ1"
          },
          "AZ2" : {
            "Ref" : "AZ2"
          }
        }
      }
    },
    "DbSubnetGroup" : {
      "Type" : "AWS::RDS::DBSubnetGroup",
      "Properties" : {
        "DBSubnetGroupDescription" : "Subnet Group for Demo",
        "SubnetIds" : [ {
          "Fn::GetAtt" : [ "NetworkStack", "Outputs.DataTierSubnet1" ]
        }, {
          "Fn::GetAtt" : [ "NetworkStack", "Outputs.DataTierSubnet2" ]
        } ],
        "Tags" : [ {
          "Key" : "Env",
          "Value" : "Infa-HOL-Demo"
        } ]
      }
    },
    "DBSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "ICS DB SG",
        "SecurityGroupIngress" : [ {
          "IpProtocol" : "tcp",
          "FromPort" : "1521",
          "ToPort" : "1521",
          "CidrIp" : "172.16.0.0/22"
        } ],
        "Tags" : [ {
          "Key" : "Env",
          "Value" : "Infa-HOL-Demo"
        } ],
        "VpcId" : {
          "Fn::GetAtt" : [ "NetworkStack", "Outputs.VPC" ]
        }
      }
    },
    "RDSInstance" : {
      "Type" : "AWS::RDS::DBInstance",
      "Properties" : {
        "AllocatedStorage" : {
          "Fn::FindInMap" : [ "Config", {
            "Ref" : "DatabaseType"
          }, "AllocatedStorage" ]
        },
        "DBInstanceClass" : {
          "Fn::FindInMap" : [ "Config", "Settings", "DatabaseSize" ]
        },
        "AvailabilityZone" : {
          "Ref" : "AZ1"
        },
        "DBName" : {
          "Fn::FindInMap" : [ "Config", "Settings", "DatabaseName" ]
        },
        "DBSubnetGroupName" : {
          "Ref" : "DbSubnetGroup"
        },
        "Engine" : {
          "Fn::FindInMap" : [ "Config", {
            "Ref" : "DatabaseType"
          }, "Engine" ]
        },
        "LicenseModel" : {
          "Fn::FindInMap" : [ "Config", {
            "Ref" : "DatabaseType"
          }, "LicenseModel" ]
        },
        "MasterUsername" : {
          "Ref" : "DatabaseUsername"
        },
        "MasterUserPassword" : {
          "Ref" : "DatabasePassword"
        },
        "MultiAZ" : {
          "Fn::FindInMap" : [ "Config", "Settings", "MultiAZ" ]
        },
        "Port" : {
          "Fn::FindInMap" : [ "Config", {
            "Ref" : "DatabaseType"
          }, "Port" ]
        },
        "Tags" : [ {
          "Key" : "Name",
          "Value" : "Infa-PowerCenter"
        } ],
        "VPCSecurityGroups" : [ {
          "Ref" : "DBSecurityGroup"
        } ]
      }
    },
    "PCInstances" : {
      "Type" : "AWS::CloudFormation::Stack",
      "DependsOn" : "RDSInstance",
      "Properties" : {
        "TemplateURL" : "https://s3-ap-southeast-1.amazonaws.com/infatemplatesqa/byol/linux/4Node/4nodepc-instance.template",
        "Parameters" : {
          "KeyName" : {
            "Ref" : "KeyName"
          },
          "InstanceType" : {
            "Fn::FindInMap" : [ "Config", "Settings", "InstanceType" ]
          },
          "InformaticaDomainPassword" : {
            "Ref" : "InformaticaDomainPassword"
          },
          "EncryptionKeyPhrase" : {
            "Ref" : "EncryptionKeyPhrase"
          },
          "DatabaseType" : {
            "Ref" : "DatabaseType"
          },
          "DatabaseAddress" : {
            "Fn::GetAtt" : [ "RDSInstance", "Endpoint.Address" ]
          },
          "DatabasePort" : {
            "Fn::GetAtt" : [ "RDSInstance", "Endpoint.Port" ]
          },
          "DatabaseUsername" : {
            "Ref" : "DatabaseUsername"
          },
          "DatabasePassword" : {
            "Ref" : "DatabasePassword"
          },
          "DatabaseServiceName" : {
            "Fn::FindInMap" : [ "Config", "Settings", "DatabaseName" ]
          },
          "RepositoryDBUser" : {
            "Ref" : "DatabaseUsername"
          },
          "RepositoryDBPassword" : {
            "Ref" : "DatabasePassword"
          },
          "SSHLocation" : {
            "Fn::FindInMap" : [ "Config", "Settings", "RDPNetwork" ]
          },
          "SubnetId" : {
            "Fn::GetAtt" : [ "NetworkStack", "Outputs.PublicSubnet" ]
          },
          "VPCId" : {
            "Fn::GetAtt" : [ "NetworkStack", "Outputs.VPC" ]
          },
          "PlacementGroupName" : {
            "Ref" : "PlacementGroupName"
          }
        }
      }
    }
  },
  "Outputs" : {
    "PowerCenterAgentIP" : {
      "Value" : {
        "Fn::GetAtt" : [ "PCInstances", "Outputs.PublicIP" ]
      },
      "Description" : "Elastic IP address of the PowerCenter instance"
    },
    "RDSInstance" : {
      "Value" : {
        "Ref" : "RDSInstance"
      },
      "Description" : "RDS Instance ID"
    }
  }
}